""" Unite.vim
let g:unite_enable_start_insert = 1 " 入力モードで開始する
let g:unite_source_file_mru_limit = 250 "最近開いたファイル履歴の保存数

""" VimFiler
let g:vimfiler_safe_mode_by_default = 0
let g:vimfiler_as_default_explorer = 1

""" Zen-Coidng
let g:user_zen_leader_key='<C-,>'
let g:user_zen_settings = {
      \'lang' : 'ja',
      \'css' : {
      \'filters' : 'fc'
      \}
      \}

""" NERD-Commenter
let g:NERDCreateDefaultMappings = 0 " デフォルトのマッピングオフ
let NERDSpaceDelims = 1 " スペース一個挟む

""" Vim PowerLine
let g:use_Powerline_dividers = 1
let g:Powerline_symbols = 'fancy'

""" Latex-Suite
let tex_flavor = 'latex'
let g:Tex_DefaultTargetFormat = 'pdf' "Macの人はデフォルトでpdfなので必要ない その他のOSの人はデフォルトがdviなので必要
let g:Tex_CompileRule_dvi = 'platex --interaction=nonstopmode $*'
let g:Tex_CompileRule_pdf = 'dvipdfmx $*.dvi'
let g:Tex_FormatDependency_pdf = 'dvi,pdf'
"let g:Tex_DefaultTargetFormat = 'pdf' "標準で.pdfにコンパイルして開いてね
let g:Tex_ViewRule_pdf = 'open -a Preview' "PDFはPreview.appで開いてね
"let g:Tex_CompileRule_pdf = 'pdflatex $*.tex' "pdflatexを使って.texから.pdfに変換してね

""" buftabs
let buftabs_only_basename = 1 "basenameのみ
let buftabs_in_statusline = 1 "statuslineに表示

""" bufexploer
let bufExplorerDetailedHelp = 1

""" mru.vim
let MRU_Use_Alt_useopen = 1

""" vim-ref
let g:ref_open = 'vsplit'
let g:ref_refe_cmd = "$HOME/bin/refe"
let g:ref_refe_version = 2

nnoremap ,rr :<C-U>Ref refe<Space>

""" open-browser.vim
let g:netrw_nogx = 1 " disable netrw's gx mapping.

""" easymotion
" ホームポジションに近いキーを使う
let g:EasyMotion_keys='hjklasdfgyuiopqwertnmzxcvbHJKLASDFGYUIOPQWERTNMZXCVB'
" 「'」 + 何かにマッピング
let g:EasyMotion_leader_key="'"
" 1 ストローク選択を優先する
let g:EasyMotion_grouping=1
" カラー設定変更
hi EasyMotionTarget ctermbg=none ctermfg=red
hi EasyMotionShade  ctermbg=none ctermfg=blue

""" quickrun.vim        http://d.hatena.ne.jp/osyo-manga/20120919/1348054752
let g:quickrun_config = {
\   "_" : {
\       "hook/close_unite_quickfix/enable_hook_loaded" : 1,
\       "hook/unite_quickfix/enable_failure" : 1,
\       "hook/close_quickfix/enable_exit" : 1,
\       "hook/close_buffer/enable_failure" : 1,
\       "hook/close_buffer/enable_empty_data" : 1,
\       "outputter" : "multi:buffer:quickfix",
\       "hook/shabadoubi_touch_henshin/enable" : 1,
\       "hook/shabadoubi_touch_henshin/wait" : 20,
\       "outputter/buffer/split" : ":botright 8sp",
\       "runner" : "vimproc",
\       "runner/vimproc/updatetime" : 40,
\   }
\}

""" qfixhowm
let howm_dir = '$HOME/dotfiles/.vim/Qmemo'
let howm_fileencoding = 'utf-8'
let howm_fileformat = 'unix'
