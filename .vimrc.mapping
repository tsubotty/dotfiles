"#####自動で括弧の中に戻る######"
inoremap { {}<Left>
inoremap [ []<Left>
inoremap ( ()<Left>
inoremap " ""<Left>
inoremap ' ''<Left>
inoremap <> <><Left>

"oで改行した時にインデントの形跡を残す"
noremap o ob<BS>
""inoremap <TAB> <ESC>==i

""#####コロンセミコロン入れ変え
noremap ; :
noremap : ;
map Y y$ "yyと同じように使える

"insert mode での移動
inoremap <C-e> <END>
inoremap <C-a> <HOME>

"##### Vim風のキーバインド #####"
"inoremap <C-j> <Down>
"inoremap <C-k> <Up>
"inoremap <C-h> <Left>
"inoremap <C-l> <Right>

"##### Emacs風のキーバインド #####"
"iunmap <C-n>
inoremap <C-n> <Down>
inoremap <C-p> <Up>
inoremap <C-b> <Left>
inoremap <C-f> <Right>

"Ctrl+g をESCに
inoremap <C-g> <ESC>
noremap <C-g> <ESC>
vnoremap <C-g> <ESC>
cnoremap <C-g> <ESC>

nnoremap <Esc><Esc> :<C-u>set nohlsearch<Return> 
"ESCキー２度押しでハイライトを消す

"Emacs風に <C-k>で行末まで削除
func! s:kill_line()
    let curcol = col('.')
    if curcol == col('$')
        join!
        call cursor(line('.'), curcol)
    else
        normal! D
    endif
endfunc
"inoremap <C-k>  <C-o>:<C-u>call <SID>kill_line()<CR>

""" unite.vim
" 入力モードで開始する
let g:unite_enable_start_insert=1
" バッファ一覧
nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
" ファイル一覧
nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
" レジスタ一覧
nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
" 最近使用したファイル一覧
nnoremap <silent> ,um :<C-u>Unite file_mru<CR>
" 常用セット
nnoremap <silent> ,uu :<C-u>Unite buffer file_mru<CR>
" 全部乗せ
nnoremap <silent> ,ua :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>
" カレントディレクトリ再帰的
nnoremap <silent> ,uc :<C-u>Unite file_rec<CR>

"" ウィンドウを分割して開く
"au FileType unite nnoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
"au FileType unite inoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
"" ウィンドウを縦に分割して開く
"au FileType unite nnoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
"au FileType unite inoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
"" ESCキーを2回押すと終了する
"au FileType unite nnoremap <silent> <buffer> <ESC><ESC> q
"au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>q

" Zen-Coidng
let g:user_zen_leader_key=','
